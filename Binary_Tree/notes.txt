For Binary Search Trees,
Think of each node as another seperate tree.
if root is the node, then root->left will be a seperate binary search tree and root->right will be seperate binary search tree
and so on.

This could be a way to think of recursion.

For Binary Heaps,
Think of each node as another seperate binary heap.
if root is the node, then root->left will be a seperate binary heap and root->right will be seperate binary heap
and so on.

For Binary Search Heaps,
Think of each node as another seperate binary search heap.
if root is the node, then root->left will be a seperate binary search heap and root->right will be seperate binary search heap
and so on.

For finding the height of a binary tree,
For finding the diameter of a binary tree,
For finding the maximum path sum of a binary tree,
Think of each node as another seperate binary tree.
if root is the node, then root->left will be a seperate binary tree and root->right will be seperate binary tree
and so on.

Inorder Traversal - left root right
PreOrder Traversal - root left right
Post Order Traversal - left right root

For finding the inorder successor of a node in a binary search tree,
Think of each node as another seperate binary search tree.
if root is the node, then root->left will be a seperate binary search tree and root->right will be seperate binary search tree
and so on.

For finding the inorder predecessor of a node in a binary search tree,
Think of each node as another seperate binary search tree.
if root is the node, then root->left will be a seperate binary search tree and root->right will be seperate binary search tree
and so on.
